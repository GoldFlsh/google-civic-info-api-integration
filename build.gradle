plugins {
	id 'org.springframework.boot' version '2.2.5.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'flsh.civic.info'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	testCompileOnly{
		extendsFrom testAnnotationProcessor
	}
}

repositories {
	mavenCentral()
}

apply from: "integration-test.gradle"

dependencies {
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'io.leangen.graphql:graphql-spqr-spring-boot-starter:0.0.4'

	/**
	 * Test Dependencies
	 */
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'io.projectreactor:reactor-test'

	integrationTestImplementation 'com.github.tomakehurst:wiremock-jre8:2.23.2'
	integrationTestImplementation 'ru.lanwen.wiremock:wiremock-junit5:1.3.1'

	def restAssuredVersion = "4.1.0"
	integrationTestImplementation "io.rest-assured:rest-assured:$restAssuredVersion"
	integrationTestImplementation "io.rest-assured:json-path:$restAssuredVersion"
	integrationTestImplementation "io.rest-assured:xml-path:$restAssuredVersion"
}

bootJar {
	archiveFileName = "${rootProject.name}.jar"
	mainClassName = "flsh.civic.info.GoogleCivicInfoApiIntegrationApplication"
}

test {
	useJUnitPlatform()

	jacoco {
		destinationFile = file("$buildDir/jacoco/unitTest.exec")
	}
	reports {
		html.enabled = true
	}
}

jacoco {
	toolVersion = "0.8.3"
}

//merge an integrationTest and unitTest report into one report
jacocoTestReport {
	executionData("$buildDir/jacoco/unitTest.exec", "$buildDir/jacoco/integrationTest.exec")
	reports {
		xml.enabled = true
	}

	afterEvaluate {
		afterEvaluate {
			classDirectories.setFrom(files(classDirectories.files.collect()))
//				{fileTree(dir: it, exclude: [''])}))
		}
	}
}
